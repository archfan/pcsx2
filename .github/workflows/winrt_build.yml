name: ðŸŽ® Windows WinRT Builds

on:
  workflow_call:
    inputs:
      patchesUrl:
        required: false
        type: string
        default: https://github.com/PCSX2/pcsx2_patches/releases/latest/download
      os:
        required: false
        type: string
        default: windows-2022
      platform:
        required: false
        type: string
        default: x64

jobs:
  # MSBUILD
  lint_vs_proj_files:
    name: Lint VS Project Files
    runs-on: ${{ inputs.os }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
      - name: Verify VS Project Files
        run: .github\workflows\scripts\winrt\validate-vs-filters.ps1

  winrt-build-avx2:
    name: Building WinRT (AVX2)
    needs: lint_vs_proj_files
    runs-on: ${{ inputs.os }}

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          submodules: recursive
        
      - name: Add MSBuild to PATH
        uses: microsoft/setup-msbuild@v1.3

      - name: Setup NuGet.exe
        uses: NuGet/setup-nuget@v1
        with:
          nuget-version: latest  

      - name: Download patches
        shell: cmd
        run: |
          cd bin/resources
          aria2c -Z "${{ inputs.patchesUrl }}/patches.zip"
  
      - name: Cache Dependencies
        id: cache-deps
        uses: actions/cache@v3
        with:
          path: deps
          key: ${{ inputs.os }} ${{ inputs.platform }} deps ${{ hashFiles('.github/workflows/scripts/winrt/build-dependencies.bat') }}
  
      - name: Build Dependencies
        if: steps.cache-deps.outputs.cache-hit != 'true'
        env:
          DEBUG: 0
        run: .github/workflows/scripts/winrt/build-dependencies.bat

      - name: Build project
        run: |
          msbuild PCSX2_winrt.sln /m /p:Platform=x64 /p:Configuration="Release WinRT AVX2" /p:AppxPackageSigningEnabled=true /p:PackageCertificateKeyFile="xbsx2_TemporaryKey.pfx" /t:restore,build /p:RestorePackagesConfig=true

      - name: Upload Builds
        uses: actions/upload-artifact@v3
        with:
          name: XBSX2.0 Nightly Build (AVX2)
          path: AppPackages/xbsx2
